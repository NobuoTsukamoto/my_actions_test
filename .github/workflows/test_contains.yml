# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
  
    strategy:
      matrix:
        b: [2.8.0, 2.7.1, 2.6.3, 2.5.3]
        
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs 
      - name: Check space before cleanup
        run: |
          docker images
          sudo rm -rf "/opt/ghc" || true
          sudo rm -rf "/usr/share/dotnet" || true
          sudo rm -rf "$AGENT_TOOLSDIRECTORY" || true
          sudo rm -rf "/usr/local/lib/android" || true
          sudo rm -rf "/usr/local/share/boost" || true
          sudo rm -rf /opt/hostedtoolcache/CodeQL || true
          sudo docker image prune --all --force
          sudo apt purge \
            ansible \
            aria2 \
            azure-cli \
            bazel \
            cabal* \
            clang* \
            dotnet-sdk* \
            ghc* \
            google-chrome-stable \
            google-cloud-sdk \
            heroku \
            kubectl \
            mysql* \
            node* \
            npm* \
            php* \
            powershell \
            rpm \
            ruby* \
            subversion \
            yarn \
            -yq || true
          sudo apt-get autoremove -y || true
          sudo apt-get autoclean -y || true
          df -h

      - name: Run a one-line script
        run: |
          export BITBAKE_OPTION="python3-tensorflow-lite"
          echo test matrix b = ${{ matrix.b }}
          mkdir conf
          case "${{ matrix.b }}" in
          2.8.*|2.7.*|2.6.*)
            export PREFERRED_VERSION_CPP=PREFERRED_VERSION_cpp-tensorflow-lite=\"${{ matrix.b }}\"
            export BITBAKE_OPTION="${BITBAKE_OPTION} cpp-tensorflow-lite"
            ;;
          esac
          
          cat <<EOF > conf/auto.conf
          PREFERRED_VERSION_python3-tensorflow-lite=""${{ matrix.b }}"
          ${PREFERRED_VERSION_CPP}
          EOF
          cat conf/auto.conf
          echo ${BITBAKE_OPTION}


